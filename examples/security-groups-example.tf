# Example: Using Security Groups Module with For Each Pattern\n# This example shows how to create security groups and rules using the configuration object approach\n\n# First, get VPC ID (assuming you have a VPC created)\ndata \"aws_vpc\" \"main\" {\n  filter {\n    name   = \"tag:Name\"\n    values = [\"main-vpc\"]\n  }\n}\n\nmodule \"security_groups\" {\n  source = \"../modules/security-groups\"\n\n  # Security Groups Configuration\n  security_groups = {\n    \"web-server-sg\" = {\n      name        = \"web-server-sg\"\n      description = \"Security group for web servers\"\n      vpc_id      = data.aws_vpc.main.id\n      tags = {\n        Environment = \"dev\"\n        Purpose     = \"web-servers\"\n        Tier        = \"public\"\n      }\n    }\n    \"app-server-sg\" = {\n      name        = \"app-server-sg\"\n      description = \"Security group for application servers\"\n      vpc_id      = data.aws_vpc.main.id\n      tags = {\n        Environment = \"dev\"\n        Purpose     = \"application-servers\"\n        Tier        = \"private\"\n      }\n    }\n    \"database-sg\" = {\n      name        = \"database-sg\"\n      description = \"Security group for database servers\"\n      vpc_id      = data.aws_vpc.main.id\n      tags = {\n        Environment = \"dev\"\n        Purpose     = \"database-servers\"\n        Tier        = \"database\"\n      }\n    }\n    \"alb-sg\" = {\n      name        = \"alb-sg\"\n      description = \"Security group for Application Load Balancer\"\n      vpc_id      = data.aws_vpc.main.id\n      tags = {\n        Environment = \"dev\"\n        Purpose     = \"load-balancer\"\n        Tier        = \"public\"\n      }\n    }\n    \"bastion-sg\" = {\n      name        = \"bastion-sg\"\n      description = \"Security group for bastion host\"\n      vpc_id      = data.aws_vpc.main.id\n      tags = {\n        Environment = \"dev\"\n        Purpose     = \"bastion-host\"\n        Tier        = \"public\"\n      }\n    }\n  }\n\n  # Security Group Rules Configuration\n  security_group_rules = {\n    # ALB Security Group Rules\n    \"alb-http-ingress\" = {\n      security_group_key = \"alb-sg\"\n      type               = \"ingress\"\n      from_port          = 80\n      to_port            = 80\n      protocol           = \"tcp\"\n      description        = \"HTTP from anywhere\"\n      cidr_blocks        = [\"0.0.0.0/0\"]\n    }\n    \"alb-https-ingress\" = {\n      security_group_key = \"alb-sg\"\n      type               = \"ingress\"\n      from_port          = 443\n      to_port            = 443\n      protocol           = \"tcp\"\n      description        = \"HTTPS from anywhere\"\n      cidr_blocks        = [\"0.0.0.0/0\"]\n    }\n    \"alb-all-egress\" = {\n      security_group_key = \"alb-sg\"\n      type               = \"egress\"\n      from_port          = 0\n      to_port            = 0\n      protocol           = \"-1\"\n      description        = \"All outbound traffic\"\n      cidr_blocks        = [\"0.0.0.0/0\"]\n    }\n\n    # Web Server Security Group Rules\n    \"web-http-from-alb\" = {\n      security_group_key        = \"web-server-sg\"\n      type                      = \"ingress\"\n      from_port                 = 80\n      to_port                   = 80\n      protocol                  = \"tcp\"\n      description               = \"HTTP from ALB\"\n      source_security_group_key = \"alb-sg\"\n    }\n    \"web-https-from-alb\" = {\n      security_group_key        = \"web-server-sg\"\n      type                      = \"ingress\"\n      from_port                 = 443\n      to_port                   = 443\n      protocol                  = \"tcp\"\n      description               = \"HTTPS from ALB\"\n      source_security_group_key = \"alb-sg\"\n    }\n    \"web-ssh-from-bastion\" = {\n      security_group_key        = \"web-server-sg\"\n      type                      = \"ingress\"\n      from_port                 = 22\n      to_port                   = 22\n      protocol                  = \"tcp\"\n      description               = \"SSH from bastion host\"\n      source_security_group_key = \"bastion-sg\"\n    }\n    \"web-all-egress\" = {\n      security_group_key = \"web-server-sg\"\n      type               = \"egress\"\n      from_port          = 0\n      to_port            = 0\n      protocol           = \"-1\"\n      description        = \"All outbound traffic\"\n      cidr_blocks        = [\"0.0.0.0/0\"]\n    }\n\n    # Application Server Security Group Rules\n    \"app-http-from-web\" = {\n      security_group_key        = \"app-server-sg\"\n      type                      = \"ingress\"\n      from_port                 = 8080\n      to_port                   = 8080\n      protocol                  = \"tcp\"\n      description               = \"Application port from web servers\"\n      source_security_group_key = \"web-server-sg\"\n    }\n    \"app-ssh-from-bastion\" = {\n      security_group_key        = \"app-server-sg\"\n      type                      = \"ingress\"\n      from_port                 = 22\n      to_port                   = 22\n      protocol                  = \"tcp\"\n      description               = \"SSH from bastion host\"\n      source_security_group_key = \"bastion-sg\"\n    }\n    \"app-all-egress\" = {\n      security_group_key = \"app-server-sg\"\n      type               = \"egress\"\n      from_port          = 0\n      to_port            = 0\n      protocol           = \"-1\"\n      description        = \"All outbound traffic\"\n      cidr_blocks        = [\"0.0.0.0/0\"]\n    }\n\n    # Database Security Group Rules\n    \"db-mysql-from-app\" = {\n      security_group_key        = \"database-sg\"\n      type                      = \"ingress\"\n      from_port                 = 3306\n      to_port                   = 3306\n      protocol                  = \"tcp\"\n      description               = \"MySQL from application servers\"\n      source_security_group_key = \"app-server-sg\"\n    }\n    \"db-postgres-from-app\" = {\n      security_group_key        = \"database-sg\"\n      type                      = \"ingress\"\n      from_port                 = 5432\n      to_port                   = 5432\n      protocol                  = \"tcp\"\n      description               = \"PostgreSQL from application servers\"\n      source_security_group_key = \"app-server-sg\"\n    }\n    # Database servers typically don't need outbound internet access\n    # Only allow specific outbound traffic if needed\n\n    # Bastion Host Security Group Rules\n    \"bastion-ssh-from-office\" = {\n      security_group_key = \"bastion-sg\"\n      type               = \"ingress\"\n      from_port          = 22\n      to_port            = 22\n      protocol           = \"tcp\"\n      description        = \"SSH from office IP ranges\"\n      cidr_blocks        = [\"203.0.113.0/24\", \"198.51.100.0/24\"] # Replace with your office IPs\n    }\n    \"bastion-https-egress\" = {\n      security_group_key = \"bastion-sg\"\n      type               = \"egress\"\n      from_port          = 443\n      to_port            = 443\n      protocol           = \"tcp\"\n      description        = \"HTTPS for package updates\"\n      cidr_blocks        = [\"0.0.0.0/0\"]\n    }\n    \"bastion-http-egress\" = {\n      security_group_key = \"bastion-sg\"\n      type               = \"egress\"\n      from_port          = 80\n      to_port            = 80\n      protocol           = \"tcp\"\n      description        = \"HTTP for package updates\"\n      cidr_blocks        = [\"0.0.0.0/0\"]\n    }\n    \"bastion-ssh-to-vpc\" = {\n      security_group_key = \"bastion-sg\"\n      type               = \"egress\"\n      from_port          = 22\n      to_port            = 22\n      protocol           = \"tcp\"\n      description        = \"SSH to VPC resources\"\n      cidr_blocks        = [data.aws_vpc.main.cidr_block]\n    }\n  }\n\n  # Managed Prefix Lists (optional)\n  managed_prefix_lists = {\n    \"office-ips\" = {\n      address_family = \"IPv4\"\n      max_entries    = 10\n      entries = [\n        {\n          cidr        = \"203.0.113.0/24\"\n          description = \"Office Network 1\"\n        },\n        {\n          cidr        = \"198.51.100.0/24\"\n          description = \"Office Network 2\"\n        }\n      ]\n      tags = {\n        Environment = \"dev\"\n        Purpose     = \"office-networks\"\n      }\n    }\n  }\n\n  # Common tags applied to all resources\n  common_tags = {\n    Project     = \"terraform-multi-account-organization\"\n    ManagedBy   = \"terraform\"\n    Owner       = \"infrastructure-team\"\n    Environment = \"dev\"\n  }\n}\n\n# Outputs\noutput \"security_group_ids\" {\n  description = \"Map of security group names to IDs\"\n  value       = module.security_groups.security_group_ids\n}\n\noutput \"security_group_info\" {\n  description = \"Detailed security group information\"\n  value       = module.security_groups.security_groups\n}\n\noutput \"managed_prefix_list_ids\" {\n  description = \"Managed prefix list IDs\"\n  value       = module.security_groups.managed_prefix_list_ids\n}"